# Generated by Django 4.2.6 on 2025-04-14 21:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('sujet', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('est_traite', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_evenement', models.CharField(choices=[('HACKATHON', 'Hackathon'), ('SEMINAIRE', 'Séminaire'), ('CONFERENCE', 'Conférence'), ('ATELIER', 'Atelier')], max_length=20)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('lieu', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='evenements/')),
            ],
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='membres/')),
                ('titre', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('github', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temoignage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('contenu', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='temoignages/')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('fichier', models.FileField(upload_to='presentations/')),
                ('type_fichier', models.CharField(choices=[('PDF', 'Document PDF'), ('PPTX', 'Présentation PowerPoint'), ('IMAGE', 'Image')], max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presentations', to='labo.membre')),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presentations', to='labo.theme')),
            ],
        ),
        migrations.AddField(
            model_name='membre',
            name='theme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membres', to='labo.theme'),
        ),
        migrations.AddField(
            model_name='membre',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ImagePresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='presentations/images/')),
                ('legende', models.CharField(blank=True, max_length=200, null=True)),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='labo.presentation')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='blog/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_publie', models.BooleanField(default=False)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='labo.membre')),
                ('categories', models.ManyToManyField(related_name='articles', to='labo.categorie')),
            ],
        ),
    ]

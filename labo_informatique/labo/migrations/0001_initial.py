# Generated by Django 4.2.6 on 2025-06-07 14:47

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
            },
        ),
        migrations.CreateModel(
            name='Collaborateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('titre', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='collaborateurs/photos/')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('lien', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Collaborateur',
                'verbose_name_plural': 'Collaborateurs',
            },
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_evenement', models.CharField(choices=[('conference', 'Conférence'), ('seminaire', 'Séminaire'), ('hackathon', 'Hackathon'), ('atelier', 'Atelier'), ('autre', 'Autre')], max_length=20)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('lieu', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='evenements/images/')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
            },
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='membres/photos/')),
                ('titre', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('github', models.URLField(blank=True, null=True)),
                ('portfolio', models.URLField(blank=True, null=True)),
                ('est_responsable', models.BooleanField(default=False)),
                ('date_arrivee', models.DateField(default=datetime.date(2023, 1, 1))),
                ('date_depart', models.DateField(blank=True, null=True)),
                ('est_ancien', models.BooleanField(default=False)),
                ('statut_ancien', models.CharField(blank=True, choices=[('parti', 'A quitté le laboratoire'), ('assistant', "Reste comme assistant à l'encadrement")], help_text="Statut de l'ancien membre", max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Membre',
                'verbose_name_plural': 'Membres',
            },
        ),
        migrations.CreateModel(
            name='Temoignage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('contenu', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='temoignages/photos/')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Témoignage',
                'verbose_name_plural': 'Témoignages',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Thème',
                'verbose_name_plural': 'Thèmes',
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_debut', models.DateField()),
                ('statut', models.CharField(choices=[('en_cours', 'En cours'), ('termine', 'Terminé'), ('suspendu', 'Suspendu'), ('annule', 'Annulé')], default='en_cours', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('est_public', models.BooleanField(default=True, help_text='Le projet est-il visible publiquement ?')),
                ('collaborateurs_externes', models.ManyToManyField(blank=True, help_text='Collaborateurs externes au projet', to='labo.collaborateur')),
                ('participants', models.ManyToManyField(blank=True, related_name='projets_participant', to='labo.membre')),
                ('theme', models.ForeignKey(help_text='Thématique de recherche associée', null=True, on_delete=django.db.models.deletion.CASCADE, to='labo.theme')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('fichier', models.FileField(upload_to='presentations/fichiers/')),
                ('type_fichier', models.CharField(choices=[('pdf', 'PDF'), ('pptx', 'PowerPoint'), ('docx', 'Word'), ('other', 'Autre')], default='pdf', max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('fichier_public', models.BooleanField(default=False, help_text='Le fichier est-il visible et téléchargeable publiquement ?')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labo.membre')),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='labo.theme')),
            ],
            options={
                'verbose_name': 'Présentation',
                'verbose_name_plural': 'Présentations',
            },
        ),
        migrations.AddField(
            model_name='membre',
            name='theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='labo.theme'),
        ),
        migrations.AddField(
            model_name='membre',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invitation',
                'verbose_name_plural': 'Invitations',
            },
        ),
        migrations.CreateModel(
            name='ImagePresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='presentations/images/')),
                ('legende', models.CharField(blank=True, max_length=200, null=True)),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='labo.presentation')),
            ],
            options={
                'verbose_name': 'Image de présentation',
                'verbose_name_plural': 'Images de présentation',
            },
        ),
        migrations.CreateModel(
            name='HistoriqueTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField(help_text='Date de début de ce thème de recherche')),
                ('date_fin', models.DateField(blank=True, help_text='Date de fin de ce thème (vide si actuel)', null=True)),
                ('description', models.TextField(blank=True, help_text='Description des travaux réalisés dans ce thème')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_themes', to='labo.membre')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labo.theme')),
            ],
            options={
                'verbose_name': 'Historique de thème',
                'verbose_name_plural': 'Historiques de thèmes',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Devenir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entreprise', models.CharField(max_length=200)),
                ('poste', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('realisations', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateField()),
                ('lieu', models.CharField(max_length=200)),
                ('lien', models.URLField(blank=True, null=True)),
                ('domaine', models.CharField(max_length=100)),
                ('type_structure', models.CharField(choices=[('academique', 'Académique'), ('industrie', 'Industrie'), ('startup', 'Startup')], default='industrie', max_length=20)),
                ('membre', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='labo.membre')),
            ],
            options={
                'verbose_name': 'Devenir',
                'verbose_name_plural': 'Devenirs',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='articles/images/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_publie', models.BooleanField(default=True)),
                ('statut_validation', models.CharField(choices=[('en_attente', 'En attente de validation'), ('valide', 'Validé'), ('rejete', 'Rejeté')], default='en_attente', help_text="Statut de validation par l'administrateur", max_length=20)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('commentaire_validation', models.TextField(blank=True, help_text="Commentaire de l'administrateur lors de la validation/rejet", null=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labo.membre')),
                ('categories', models.ManyToManyField(to='labo.categorie')),
                ('validateur', models.ForeignKey(blank=True, help_text="Administrateur qui a validé l'article", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_valides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.AddConstraint(
            model_name='historiquetheme',
            constraint=models.UniqueConstraint(condition=models.Q(('date_fin__isnull', True)), fields=('membre', 'theme'), name='unique_theme_actuel_par_membre'),
        ),
    ]
